

;
; +-------------------------------------------------------------------------+
; |      This file was generated by The Interactive Disassembler (IDA)      |
; |           Copyright (c) 2022 Hex-Rays, <support@hex-rays.com>           |
; |                      License info: 48-591F-7CB6-D6                      |
; |                       Think-Cell Operations GmbH                        |
; +-------------------------------------------------------------------------+
;
; Input SHA256 : 0956534A9CC64EEAE65931DA327D63E58D416A97C1B93DB607CFAFA5AC7FD4D0
; Input MD5    : BF77DF781EAB005AA8A0B4A693C8C6C1
; Input CRC32  : AD390DDD

; File Name   : Z:\BREAKME.COM
; Format      : MS-DOS COM-file
; Base Address: 1000h Range: 10100h-10220h Loaded length: 120h

                .8086
                .model tiny

; ===========================================================================

; Segment type: Pure code
seg000          segment byte public 'CODE'
                assume cs:seg000
                org 100h
                assume es:nothing, ss:nothing, ds:seg000

; =============== S U B R O U T I N E =======================================


                public start
start           proc near
                xor     dx, dx

loc_10102:                              ; CODE XREF: start+50↓j
                xor     ax, ax
                xor     cx, cx
                mov     si, 0Bh
                push    dx

loc_1010A:                              ; CODE XREF: start+1C↓j
                mov     ax, cx
                xor     dx, dx
                mul     si
                mov     cx, ax
                mov     ah, 1
                int     21h             ; DOS - KEYBOARD INPUT
                                        ; Return: AL = character read
                xor     ah, ah
                add     cx, ax
                cmp     al, 0Dh
                jnz     short loc_1010A
                pop     dx
                cmp     cx, 0Dh
                jnz     short loc_1013F
                inc     dl
                push    dx
                mov     bx, 0B800h
                mov     es, bx
                assume es:nothing
                mov     bx, 0EB0h
                mov     ch, 9
                mov     si, 1F7h
                mov     bp, 19h
                nop
                call    sub_101AF
                pop     dx
                jmp     short loc_1014D
; ---------------------------------------------------------------------------
                db 90h
; ---------------------------------------------------------------------------

loc_1013F:                              ; CODE XREF: start+22↑j
                push    dx
                push    cx
                mov     di, 21Ah
                call    sub_1017E
                pop     cx
                pop     dx
                cmp     cx, ax
                jnz     short loc_10169

loc_1014D:                              ; CODE XREF: start+3C↑j
                cmp     dl, 0
                jnz     short loc_10102
                mov     bx, 0B800h
                mov     es, bx
                mov     bx, 0EB0h
                mov     ch, 0Ah
                mov     si, 1E9h
                mov     bp, 0Eh
                nop
                call    sub_101AF
                jmp     short locret_1017D
; ---------------------------------------------------------------------------
                db 90h
; ---------------------------------------------------------------------------

loc_10169:                              ; CODE XREF: start+4B↑j
                mov     bx, 0B800h
                mov     es, bx
                mov     bx, 0EB0h
                mov     ch, 0Ch
                mov     si, 1DCh
                mov     bp, 0Dh
                nop
                call    sub_101AF

locret_1017D:                           ; CODE XREF: start+66↑j
                retn
start           endp


; =============== S U B R O U T I N E =======================================


sub_1017E       proc near               ; CODE XREF: start+44↑p
                push    di
                mov     cx, ds
                mov     es, cx
                assume es:seg000
                call    sub_1019D
                mov     cx, ax
                xor     ax, ax
                xor     dx, dx
                mov     si, 0Ah
                pop     di

    loc_10190:                          ; CODE XREF: sub_1017E+1C↓j
                mul     si
                mov     dl, [di]
                sub     dl, 30h ; '0'
                add     ax, dx
                inc     di
                loop    loc_10190
                retn
sub_1017E       endp


; =============== S U B R O U T I N E =======================================


sub_1019D       proc near               ; CODE XREF: sub_1017E+5↑p
                cld
                mov     ax, 24h ; '$'
                mov     si, di
                dec     di

    loc_101A4:                          ; CODE XREF: sub_1019D+B↓j
                inc     di
                cmp     es:[di], al
                jnz     short loc_101A4
                mov     ax, di
                sub     ax, si
                retn
sub_1019D       endp


; =============== S U B R O U T I N E =======================================


sub_101AF       proc near               ; CODE XREF: start+38↑p
                                        ; start+63↑p ...
                add     bp, si

    loc_101B1:                          ; CODE XREF: sub_101AF+D↓j
                mov     cl, [si]
                mov     es:[bx], cx
                add     bx, 2
                inc     si
                cmp     si, bp
                jnz     short loc_101B1
                retn
sub_101AF       endp

; ---------------------------------------------------------------------------
                mov     si, 5
                mov     di, 0Ah

loc_101C5:                              ; CODE XREF: seg000:01D9↓j
                xor     dx, dx
                div     di
                add     dl, 30h ; '0'
                mov     dh, ch
                mov     es:[bx-2], dx
                sub     bx, 2
                dec     si
                cmp     si, 0
                jnz     short loc_101C5
                retn
; ---------------------------------------------------------------------------
aAccessDeniedac db 'access deniedaccess grantedempty password. Try again',0
                db 9 dup(0), 33h, 30h, 33h, 2 dup(32h), 24h
seg000          ends


                end start
